Single Responsibility Principle (SRP)
Каждый сервис занимается своей конкретной задачей, без смешения и пересечений действий
GetSecretNumberService - генерирует случайное число
GetSettingsService - запрашивает основные настройки для работы
GuessingService - инкапсулирует алгоритм угадывания
ProcessResultService - позволяет обрабоать конечный результат

Open/Closed Principle (OCP)
При необходимости иных методов обработки результата можно реализовать метод интерфейса 
IProcessResultService любым удобным способом в новос классе

Liskov Substitution Principle (LSP)
не удалось продемонстрировать из за отсутствия необходимости наследования

Interface Segregation Principle (ISP)
в интерфейсах представлены только необходимые методы укладывающиеся в бизнесс логику

Dependency Inversion Principle (DIP)
все сервисы имплементируют интерфейсы, что позволит при использовании контейнеров легко их регистрировать и уменьшает связность
более явно продемонстрировать тоже не вышло из за отсутвия необхожимости многоуровневой иерархии

